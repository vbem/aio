name: Continuous Integration
# on push tag event -> semver will be build and push to remote, latest tag included if a stable semver
# on push branch event -> generated tag with time and SHA, no push
# on `workflow_dispatch` event -> generated tag with time and SHA if no input, push depends on input

env:
  # only change these
  WF_CR_HOST:     docker.io
  WF_CR_USER:     ${{ github.repository_owner }}
  WF_CR_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
  WF_IMG_REPO:    ${{ github.repository }}
  
  # DON'T change these
  WF_IS_PUSH:     ${{ github.ref_type == 'tag' || github.event.inputs.img-push == 'true' }}
  WF_IS_TAG_GEN:  ${{ github.ref_type != 'tag' && github.event.inputs.img-tag == '' }}
  TZ:             Asia/Shanghai

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
  group: ${{ github.workflow }}@${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    # If you define neither tags(-ignore) nor branches(-ignore), the workflow will run for either branches or tags.
    paths:
      - 'Dockerfile'
      - '.dockerignore'
      - 'src/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:
    inputs:
      # https://docs.github.com/actions/using-workflows/triggering-a-workflow#defining-inputs-for-manually-triggered-workflows
      img-tag:
        description: Image tag (e.g. `v1.2.3-beta.45`), blank to generate a tag with time and SHA
        type: string
        required: false
        default: ''
      img-push:
        description: 'Push to remote container registry'
        type: boolean
        required: false
        default: 'false'

jobs:
  CI:
    runs-on: ubuntu-latest
    
    outputs:
      meta-version: ${{ steps.meta.outputs.version }}
      meta-tags:    ${{ steps.meta.outputs.tags }}
      meta-labels:  ${{ steps.meta.outputs.labels }}
      meta-json:    ${{ steps.meta.outputs.json }}
      build-digest: ${{ steps.build.outputs.digest }}
      build-meta:   ${{ steps.build.outputs.metadata }}
      inspect-json: ${{ steps.inspect.outputs.json }}
      
    
    steps:
    
      # https://github.com/marketplace/actions/checkout
      #- uses: actions/checkout@v3
    
      - name: Show flattened contexts
        if: true # Set false to turn off
        continue-on-error: true
        run: |
          jq -r '
            del(.github.token) | del(.github.event) |
            [ paths(type!="object" and type!="array") as $p | {"key":$p|join("."),"value":getpath($p)} ] | from_entries |
            to_entries[] | "\(.key): \(.value|@json)"
          ' \
          <<__EOF__
          {
            "github":       ${{ toJson(github) }},
            "github.event": ${{ toJson(github.event) }},
            "runner":       ${{ toJson(runner) }},
            "inputs":       ${{ toJson(inputs) }},
            "needs":        ${{ toJson(needs) }},
            "job":          ${{ toJson(job) }},
            "steps":        ${{ toJson(steps) }},
            "strategy":     ${{ toJson(strategy) }},
            "matrix":       ${{ toJson(matrix) }}
          }
          __EOF__
          
      - name: Generate docker-metadata from GitHub events and Git reference -> ${{ github.event_name }} ${{ github.ref_type }} ${{ github.ref_name }}
        id: meta
        uses: docker/metadata-action@v3 # https://github.com/marketplace/actions/docker-metadata-action
        with:
          images: ${{ env.WF_CR_HOST }}/${{ env.WF_IMG_REPO }}
          # https://semver.org/
          # https://momentjs.com/docs/#/displaying/format/
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=${{ github.event.inputs.img-tag }},enable=${{ github.event.inputs.img-tag != '' }}
            type=raw,value=0.${{ github.run_number }}.${{ github.run_attempt }}-time.{{date 'YYYYMMDDHHmmssz'}}.sha.{{sha}},enable=${{ env.WF_IS_TAG_GEN }}  
          # https://github.com/opencontainers/image-spec/blob/master/annotations.md
          labels: |
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            
      - name: Login remote container registry -> ${{ env.WF_CR_USER }}@${{ env.WF_CR_HOST }}
        id: login
        if: env.WF_IS_PUSH == 'true'
        uses: docker/login-action@v1 # https://github.com/marketplace/actions/docker-login
        with:
          registry: ${{ env.WF_CR_HOST }}
          username: ${{ env.WF_CR_USER }}
          password: ${{ env.WF_CR_TOKEN }}
          
      - name: Build image with push=${{ env.WF_IS_PUSH }} -> ${{ join(fromJSON(steps.meta.outputs.json).tags, ' & ') }}
        id: build
        uses: docker/build-push-action@v2 # https://github.com/marketplace/actions/build-and-push-docker-images
        with:
          #context: .
          push: ${{ env.WF_IS_PUSH }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Inspect image -> ${{ env.STEP_IMG }}
        if: true # Set false to turn off
        continue-on-error: true
        env:
          STEP_IMG: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        run: |
          docker image history ${{ env.STEP_IMG }}
          docker image inspect ${{ env.STEP_IMG }}
          echo "::set-output name=json::$(docker image inspect ${{ env.STEP_IMG }})"
