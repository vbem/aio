name: Continuous Integration
# Push tag event -> semver will be build and push to remote, latest tag included if stable semver
# Push branch event -> local build only
# Manually triggered -> depends on inputs

env:
  WF_CR_HOST:     docker.io
  WF_CR_USER:     ${{ github.repository_owner }}
  WF_CR_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
  WF_IMG_REPO:    ${{ github.repository }}
  TZ:             Asia/Shanghai

on:
  push:
    paths:
    - 'Dockerfile'
    - '.dockerignore'
    - 'src/**'
    - '.github/workflows/ci.yml'
  workflow_dispatch:
    inputs:
      img-tag:
        description: Image tag (e.g. `v1.2.3-beta.45`), blank to an generated tag with time and SHA
        type: string
        required: false
        default: ''
      img-push:
        description: 'Push to remote container registry'
        type: boolean
        required: false
        default: 'false' # actually all inputs are string

jobs:
  CI:
    runs-on: ubuntu-latest
      
    steps:
    # - uses: actions/checkout@v3
    
    - name: Show flattened context
      continue-on-error: true
      run: |
        jq <<__EOF__
        {
          "steps": ${{ toJson(inputs) }},
          "steps": ${{ toJson(needs) }},
          "steps": ${{ toJson(matrix) }},
          "steps": ${{ toJson(strategy) }},
          "steps": ${{ toJson(runner) }},
          "steps": ${{ toJson(steps) }},
          "steps": ${{ toJson(job) }},
          "steps": ${{ toJson(github) }}
        }
        __EOF__
        
        # echo $STEP_CONTEXTS | jq 'del(.github.token) | [paths(type != "object" and type != "array") as $p | {"key": $p | join("."), "value": getpath($p)}] | from_entries'
        
        
    - id: meta
      uses: docker/metadata-action@v3 # https://github.com/marketplace/actions/docker-metadata-action
      with:
        images: ${{ env.WF_CR_HOST }}/${{ env.WF_IMG_REPO }}
        # https://semver.org/
        # https://momentjs.com/docs/#/displaying/format/
        # on push tag event -> pushed semver tag
        # on `workflow_dispatch` event and input `img-tag` is not empty -> `github.event.inputs.img-tag`
        # on other events -> generated tag with time and SHA
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=${{ github.event.inputs.img-tag }},enable=${{ github.event.inputs.img-tag != '' }}
          type=raw,value=0.${{ github.run_number }}.${{ github.run_attempt }}-time.{{date 'YYYYMMDDHHmmssz'}}.sha.{{sha}},enable=${{ github.ref_type != 'tag' && github.event.inputs.img-tag == '' }}  
        # https://github.com/opencontainers/image-spec/blob/master/annotations.md
        labels: |
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          
    - name: Login remote container registry -> ${{ env.WF_CR_USER }}@${{ env.WF_CR_HOST }}
      id: login
      if: github.ref_type == 'tag' || github.event.inputs.img-push == 'true'
      uses: docker/login-action@v1 # https://github.com/marketplace/actions/docker-login
      with:
        registry: ${{ env.WF_CR_HOST }}
        username: ${{ env.WF_CR_USER }}
        password: ${{ env.WF_CR_TOKEN }}
        
    - name: Build image with push=${{ steps.login.outcome == 'success' }} -> ${{ join(fromJSON(steps.meta.outputs.json).tags, ' & ') }}
      uses: docker/build-push-action@v2 # https://github.com/marketplace/actions/build-and-push-docker-images
      with:
        #context: .
        push: ${{ steps.login.outcome == 'success' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
