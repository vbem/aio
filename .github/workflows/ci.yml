name: Continuous Integration

on:

  workflow_dispatch:
    inputs:
      img_tag:  
        description: 'Image tag'
        type: string
        required: false
        default: ''
      img_latest:
        description: 'Whether to push latest tag'
        type: boolean
        required: false
        default: 'false'
    
  push:
    paths:
    - 'Dockerfile'
    - '.dockerignore'
    - 'src/**'
    
env:
  TZ:             Asia/Shanghai
  WF_CR_HOST:     docker.io
  WF_CR_USER:     ${{ github.repository_owner }}
  WF_CR_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
  WF_IMG_REPO:    ${{ github.repository }}

jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
   
    - name: Gather context -> github
      run: |        
        cat | jq 'del(.token)' > context.github.json <<__EOF__
        ${{ toJSON(github) }}
        __EOF__
        
    - name: Gather context -> runner
      run: |
        cat > context.runner.json <<__EOF__
        ${{ toJSON(runner) }}
        __EOF__
        
    # - uses: actions/checkout@v3
    
    #- uses: docker/login-action@v1
    #  with:
    #    registry: ${{ env.WF_CR_HOST }}
    #    username: ${{ env.WF_CR_USER }}
    #    password: ${{ env.WF_CR_TOKEN }}
    
    - name: Generate image tag and URI
      id: gen
      run: |
        if [[ -n "${{ github.event.inputs.tag }}" ]]; then
          tag='${{ github.event.inputs.tag }}'
        elif [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
          tag="$(basename ${{ github.ref }})"
        else
          tag=$(TZ=CST+8 date +'%y.%m.%d')-$(echo ${{ github.sha }}|cut -c-7)
        fi
        echo "Tag of image will be: $tag"
        echo "::set-output name=tag::$tag"
        
        uri=${{ env.WF_CR_HOST }}/${{ env.WF_IMG_REPO }}:$tag
        echo "URI of image will be: $uri"
        echo "::set-output name=uri::$uri"
        
        echo $(date --rfc-3339=seconds)
        
    - uses: docker/build-push-action@v2
      with:
        pull: true
        tags: ${{ steps.gen.outputs.uri }}
        labels: | # https://github.com/opencontainers/image-spec/blob/master/annotations.md
          org.opencontainers.image.base.name=library/alpine
          org.opencontainers.image.title=${{ github.event.repository.name }}
          org.opencontainers.image.description=${{ github.event.repository.description }}
          org.opencontainers.image.authors=${{ github.actor }}
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.url=${{ steps.gen.outputs.uri }}
          org.opencontainers.image.version=${{ steps.gen.outputs.tag }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
        
    - run: |
        docker image inspect ${{ steps.gen.outputs.uri }}
#  build:
#    uses: vbem/reusable-workflows/.github/workflows/image-ci.yml@main
#    with:
#      ctx:    .
#      host:   docker.io
#      user:   ${{ github.repository_owner }}
#      repo:   ${{ github.repository }} 
#      tag:    ''
#      latest: true
#      test:   cat /etc/os-release
#    secrets:
#      token:  ${{ secrets.DOCKERHUB_TOKEN }}
  
        
