name: Continuous Integration

on:

  push:
    tags: '*'
    paths:
    - 'Dockerfile'
    - '.dockerignore'
    - 'src/**'
    
  workflow_dispatch:
    inputs:
      img-tag:
        description: 'Image tag'
        type: string
        required: false
        default: ''
      img-push:
        description: 'Push to remote'
        type: boolean
        required: false
  
env:
  TZ:             Asia/Shanghai
  WF_CR_HOST:     docker.io
  WF_CR_USER:     ${{ github.repository_owner }}
  WF_CR_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
  WF_IMG_REPO:    ${{ github.repository }}

jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
    #- uses: actions/checkout@v3
    
    - name: Gather context -> github
      run: |        
        cat | jq 'del(.token)' > context.github.json <<__EOF__
        ${{ toJSON(github) }}
        __EOF__
        
    - name: Gather context -> runner
      run: |
        cat > context.runner.json <<__EOF__
        ${{ toJSON(runner) }}
        __EOF__
        
    # https://github.com/marketplace/actions/docker-metadata-action
    - id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.WF_CR_HOST }}/${{ env.WF_IMG_REPO }}
        # on push tag event -> :git-tag
        # on `workflow_dispatch` event and input `img-tag` is not empty -> `github.event.inputs.img-tag`
        # on other events -> sha-????-time-???? https://momentjs.com/docs/#/displaying/format/
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=${{ github.event.inputs.img-tag }},enable=${{ '' != github.event.inputs.img-tag }}
          type=raw,value=sha-{{sha}}-time-{{date 'YYYYMMDDhhmmssZZ'}},enable=${{ 'tag' != github.ref_type && !github.event.inputs.img-tag }}  
        # https://github.com/opencontainers/image-spec/blob/master/annotations.md
        labels: |
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          
    - name: build local image -> ${{ join(fromJSON(steps.meta.outputs.json).tags, ' & ') }}
      uses: docker/build-push-action@v2
      with:
        pull: true
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - run: docker image inspect ${{ steps.gen.outputs.uri }}

    - name: Test local image -> ${{ steps.gen.outputs.uri }}
      run: |
        docker run --rm ${{ steps.gen.outputs.uri }} jq -V
        docker run --rm ${{ steps.gen.outputs.uri }} python3 -V
        docker run --rm ${{ steps.gen.outputs.uri }} yq -V
        
    - uses: docker/login-action@v1
      with:
        registry: ${{ env.WF_CR_HOST }}
        username: ${{ env.WF_CR_USER }}
        password: ${{ env.WF_CR_TOKEN }}
